<!-- leavePlanned.ejs -->



<%- include('../partials/header', { title: 'Leave Request', user: user, messages: messages }) %>



<form id="plannedLeaveForm" action="/plannedLeave" method="POST">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    <label for="work_date">Work Date:</label>
                    <input type="date" id="work_date" name="work_date" class="form-control" required  oninput="calculateLastDate()" oninvalid="this.setCustomValidity('Enter the day you worked')" oninput="this.setCustomValidity('')">
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label for="last_date">Last Date:</label>
                    <input type="date" id="last_date" name="last_date" class="form-control readonly" readonly>
                </div>
            </div>            
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="num_days">Number of Days Off:</label>
                    <input type="number" id="num_days" name="num_days" class="form-control" required  min="1" oninput="calculateLastDate()" > 
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="leave_approved">Leave Approved:</label>
                    <select id="leave_approved" name="leave_approved" class="form-control" required>
                        <option value="true">Yes</option>
                        <option value="false" selected>No</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <label for="notes">Notes:</label>
                    <textarea id="notes" name="notes" class="form-control" rows="4" cols="50"></textarea>
                </div>
            </div>
        </div>        
        <div class="row">
            <div class="col-md-12">
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </div>
    </div>
</form>

<%- include('../partials/footer') %>


<script>
    console.log("a1   ")
    if ("geolocation" in navigator) {
    navigator.geolocation.getCurrentPosition(function(position) {
        console.log("Latitude: " + position.coords.latitude +
                    " Longitude: " + position.coords.longitude);
    });
    } else {
    console.log("Geolocation is not supported by this browser.");
    }    

    function calculateLastDate() {
    console.log("c1   ")
    var workDate = new Date(document.getElementById("work_date").value);
    var numDays = parseInt(document.getElementById("num_days").value);
    
        if (!isNaN(workDate.getTime()) && !isNaN(numDays)) {
            var lastDate = new Date(workDate);
            lastDate.setDate(lastDate.getDate() + numDays -1);
            
            var formattedLastDate = lastDate.toISOString().split('T')[0];
            document.getElementById("last_date").value = formattedLastDate;

        }
        checkTimesheetEntered(workDate, numDays);
    }


    function checkTimesheetEntered(workDate, numDays) {
    var workDays = <%- JSON.stringify(workDays.map(entry => ({ ...entry, work_date: new Date(entry.work_date).toISOString().split('T')[0] }))) %>;
    var messageContainer = document.getElementById('messageContainer');

    // Loop through each date in the range starting from workDate
    for (var i = 0; i < numDays; i++) {
        var currentDate = new Date(workDate);
        currentDate.setDate(currentDate.getDate() + i); // Increment date by i days
        var formattedCurrentDate = currentDate.toISOString().split('T')[0];

        // Check if the current date clashes with any date in workDays
        var dateExists = workDays.some(entry => entry['work_date'] === formattedCurrentDate);
        if (dateExists) {
            messageContainer.innerHTML = '<div class="alert alert-primary" role="alert">You already have one or more timesheets entered during this period. This action will overwrite all timesheets during the period.</div>';
            return; // Return early if clash is found
        }
    }

    // If no clashes found, clear the message container
    messageContainer.innerHTML = '';
}


</script>